// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(cuid()) // Changed from postId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User     @relation(fields: [createdById], references: [id]) // Changed from userId
  createdById String

  @@index([name])
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid()) // Changed from accountId
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade) // Changed from userId

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid()) // Changed from sessionId
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade) // Changed from userId
}

model User {
  id            String    @id @default(cuid()) // Changed from userId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  reports       Report[]
  Post          Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Station {
  id           String   @id @default(cuid()) // Changed from stationId
  name         String
  latitude     Float
  longitude    Float
  lines        String[]
  policeRecent Boolean  @default(false)
  reports      Report[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Report {
  id            String   @id @default(cuid()) // Changed from reportId
  stationId     String
  station       Station  @relation(fields: [stationId], references: [id]) // Changed from stationId
  text          String
  policePresent Boolean
  createdAt     DateTime @default(now())
  userId        String?
  user          User?    @relation(fields: [userId], references: [id]) // Changed from userId
}